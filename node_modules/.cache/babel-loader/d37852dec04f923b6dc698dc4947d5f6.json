{"ast":null,"code":"export const createWsMiddleware = (wsUrl, wsActions) => {\n  const wsMiddleware = store => {\n    let socket = null;\n    return next => action => {\n      const {\n        dispatch\n      } = store;\n      const {\n        type,\n        payload\n      } = action;\n      const {\n        wsStart,\n        onOpen,\n        onError,\n        onMessage,\n        onClose\n      } = wsActions;\n\n      if (type === wsStart) {\n        console.log(`${wsUrl}${payload}`);\n        socket = new WebSocket(`${wsUrl}${payload}`);\n      }\n\n      if (socket) {\n        socket.onopen = event => {\n          dispatch({\n            type: onOpen\n          });\n        };\n\n        socket.onerror = event => {\n          console.log(`ws error: ${event}`);\n          dispatch({\n            type: onError\n          });\n        };\n\n        socket.onmessage = event => {\n          const {\n            data\n          } = event;\n          dispatch({\n            type: onMessage,\n            payload: JSON.parse(data)\n          });\n        };\n\n        socket.close = event => {\n          dispatch({\n            type: onClose\n          });\n        };\n      }\n\n      next(action);\n    };\n  };\n\n  return wsMiddleware;\n};","map":{"version":3,"names":["createWsMiddleware","wsUrl","wsActions","wsMiddleware","store","socket","next","action","dispatch","type","payload","wsStart","onOpen","onError","onMessage","onClose","console","log","WebSocket","onopen","event","onerror","onmessage","data","JSON","parse","close"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/middleware/wsMiddleware.js"],"sourcesContent":["export const createWsMiddleware = (wsUrl, wsActions) => {\r\n  const wsMiddleware = (store) => {\r\n    let socket = null;\r\n    return next => (action) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const {\r\n        wsStart,\r\n        onOpen,\r\n        onError,\r\n        onMessage,\r\n        onClose\r\n      } = wsActions;\r\n      if (type === wsStart) {\r\n        console.log(`${wsUrl}${payload}`);\n        socket = new WebSocket(`${wsUrl}${payload}`);\r\n      }\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({type: onOpen});\r\n        };\r\n        socket.onerror = event => {\r\n          console.log(`ws error: ${event}`);\r\n          dispatch({type: onError});\r\n        };\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          dispatch({type: onMessage, payload: JSON.parse(data)});\r\n        };\r\n        socket.close = event => {\r\n           dispatch({type: onClose});\r\n        };\r\n      }\r\n      next(action);\r\n    }\r\n  };\r\n  return wsMiddleware;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;EACtD,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9B,IAAIC,MAAM,GAAG,IAAb;IACA,OAAOC,IAAI,IAAKC,MAAD,IAAY;MACzB,MAAM;QAAEC;MAAF,IAAeJ,KAArB;MACA,MAAM;QAAEK,IAAF;QAAQC;MAAR,IAAoBH,MAA1B;MACA,MAAM;QACJI,OADI;QAEJC,MAFI;QAGJC,OAHI;QAIJC,SAJI;QAKJC;MALI,IAMFb,SANJ;;MAOA,IAAIO,IAAI,KAAKE,OAAb,EAAsB;QACpBK,OAAO,CAACC,GAAR,CAAa,GAAEhB,KAAM,GAAES,OAAQ,EAA/B;QACAL,MAAM,GAAG,IAAIa,SAAJ,CAAe,GAAEjB,KAAM,GAAES,OAAQ,EAAjC,CAAT;MACD;;MACD,IAAIL,MAAJ,EAAY;QACVA,MAAM,CAACc,MAAP,GAAgBC,KAAK,IAAI;UACvBZ,QAAQ,CAAC;YAACC,IAAI,EAAEG;UAAP,CAAD,CAAR;QACD,CAFD;;QAGAP,MAAM,CAACgB,OAAP,GAAiBD,KAAK,IAAI;UACxBJ,OAAO,CAACC,GAAR,CAAa,aAAYG,KAAM,EAA/B;UACAZ,QAAQ,CAAC;YAACC,IAAI,EAAEI;UAAP,CAAD,CAAR;QACD,CAHD;;QAIAR,MAAM,CAACiB,SAAP,GAAmBF,KAAK,IAAI;UAC1B,MAAM;YAAEG;UAAF,IAAWH,KAAjB;UACAZ,QAAQ,CAAC;YAACC,IAAI,EAAEK,SAAP;YAAkBJ,OAAO,EAAEc,IAAI,CAACC,KAAL,CAAWF,IAAX;UAA3B,CAAD,CAAR;QACD,CAHD;;QAIAlB,MAAM,CAACqB,KAAP,GAAeN,KAAK,IAAI;UACrBZ,QAAQ,CAAC;YAACC,IAAI,EAAEM;UAAP,CAAD,CAAR;QACF,CAFD;MAGD;;MACDT,IAAI,CAACC,MAAD,CAAJ;IACD,CA/BD;EAgCD,CAlCD;;EAmCA,OAAOJ,YAAP;AACD,CArCM"},"metadata":{},"sourceType":"module"}