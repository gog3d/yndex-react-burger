{"ast":null,"code":"import { createAction } from \"@reduxjs/toolkit\";\nimport { baseURL } from '../../utils/config';\nimport { checkResponse } from '../utils';\nimport { GET_FORGOT_PASSWORD_REQUEST, GET_FORGOT_PASSWORD_SUCCESS, GET_FORGOT_PASSWORD_FAILED } from '../action-types';\nexport const getForgotPasswordRequest = createAction(GET_FORGOT_PASSWORD_REQUEST);\nexport const getForgotPasswordSuccess = createAction(GET_FORGOT_PASSWORD_SUCCESS);\nexport const getForgotPasswordFailed = createAction(GET_FORGOT_PASSWORD_FAILED);\nexport const getForgotPassword = body => dispatch => {\n  dispatch({\n    type: getForgotPasswordRequest\n  });\n  fetch(baseURL + 'password-reset', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(body)\n  }).then(checkResponse).then(obj => {\n    //    getForgotPasswordRequest(body).then(obj => {\n    if (obj) {\n      console.log(obj);\n      dispatch({\n        type: getForgotPasswordSuccess,\n        restorePassword: obj\n      });\n    } else {\n      //    console.log('fail');\n      dispatch({\n        type: getForgotPasswordFailed\n      });\n    }\n  }).catch(error => {\n    //    console.log(error);\n    dispatch({\n      type: getForgotPasswordFailed\n    });\n  });\n};","map":{"version":3,"names":["createAction","baseURL","checkResponse","GET_FORGOT_PASSWORD_REQUEST","GET_FORGOT_PASSWORD_SUCCESS","GET_FORGOT_PASSWORD_FAILED","getForgotPasswordRequest","getForgotPasswordSuccess","getForgotPasswordFailed","getForgotPassword","body","dispatch","type","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","then","obj","console","log","restorePassword","catch","error"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/actions/forgot-password.ts"],"sourcesContent":["import { AppDispatch, AppThunk } from '../store';\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { baseURL }  from '../../utils/config';\nimport { checkResponse }  from '../utils';\n\nimport {\n  \n  GET_FORGOT_PASSWORD_REQUEST,\n  GET_FORGOT_PASSWORD_SUCCESS,\n  GET_FORGOT_PASSWORD_FAILED,\n\n} from '../action-types';\n\nexport const getForgotPasswordRequest = createAction(GET_FORGOT_PASSWORD_REQUEST);\nexport const getForgotPasswordSuccess = createAction(GET_FORGOT_PASSWORD_SUCCESS);\nexport const getForgotPasswordFailed = createAction(GET_FORGOT_PASSWORD_FAILED);\n\n\n\nexport type TForgotPasswordAction = ReturnType<typeof getForgotPasswordRequest>\n                                    | ReturnType<typeof getForgotPasswordSuccess>\n                                    | ReturnType<typeof getForgotPasswordFailed>;\n\nexport type TForgotPasswordBody = {\n  email: string\n}\n\nexport const getForgotPassword = (body: TForgotPasswordBody) => (dispatch: AppDispatch) => {\n  dispatch({ type: getForgotPasswordRequest });\n  fetch(baseURL + 'password-reset', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(body),\n  }).then(checkResponse).then(obj => {\n//    getForgotPasswordRequest(body).then(obj => {\n  if (obj) {\n    console.log(obj)\n    dispatch({ type: getForgotPasswordSuccess, restorePassword: obj});\n  } else {\n//    console.log('fail');\n    dispatch({ type: getForgotPasswordFailed });\n  }\n  }).catch((error) => {\n//    console.log(error);\n    dispatch({ type: getForgotPasswordFailed });\n  });\n};"],"mappings":"AACA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAyB,oBAAzB;AACA,SAASC,aAAT,QAA+B,UAA/B;AAEA,SAEEC,2BAFF,EAGEC,2BAHF,EAIEC,0BAJF,QAMO,iBANP;AAQA,OAAO,MAAMC,wBAAwB,GAAGN,YAAY,CAACG,2BAAD,CAA7C;AACP,OAAO,MAAMI,wBAAwB,GAAGP,YAAY,CAACI,2BAAD,CAA7C;AACP,OAAO,MAAMI,uBAAuB,GAAGR,YAAY,CAACK,0BAAD,CAA5C;AAYP,OAAO,MAAMI,iBAAiB,GAAIC,IAAD,IAAgCC,QAAD,IAA2B;EACzFA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAR,CAAD,CAAR;EACAO,KAAK,CAACZ,OAAO,GAAG,gBAAX,EAA6B;IAChCa,MAAM,EAAE,MADwB;IAEhCC,IAAI,EAAE,MAF0B;IAGhCC,KAAK,EAAE,UAHyB;IAIhCC,WAAW,EAAE,aAJmB;IAKhCC,OAAO,EAAE;MACP,gBAAgB;IADT,CALuB;IAQhCC,QAAQ,EAAE,QARsB;IAShCC,cAAc,EAAE,aATgB;IAUhCV,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeZ,IAAf;EAV0B,CAA7B,CAAL,CAWGa,IAXH,CAWQrB,aAXR,EAWuBqB,IAXvB,CAW4BC,GAAG,IAAI;IACrC;IACE,IAAIA,GAAJ,EAAS;MACPC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAb,QAAQ,CAAC;QAAEC,IAAI,EAAEL,wBAAR;QAAkCoB,eAAe,EAAEH;MAAnD,CAAD,CAAR;IACD,CAHD,MAGO;MACT;MACIb,QAAQ,CAAC;QAAEC,IAAI,EAAEJ;MAAR,CAAD,CAAR;IACD;EACA,CApBD,EAoBGoB,KApBH,CAoBUC,KAAD,IAAW;IACtB;IACIlB,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAR,CAAD,CAAR;EACD,CAvBD;AAwBD,CA1BM"},"metadata":{},"sourceType":"module"}