{"ast":null,"code":"import { createAction } from \"@reduxjs/toolkit\";\nimport { baseURL } from '../../utils/config';\nimport { checkResponse } from '../utils';\nimport { getCookie } from '../utils'; //import { getItemsRequest, getOrderDetailsRequest } from './fakeApi';\n\nimport { ADD_CONSTRUCTOR_INGREDIENT, DELETE_CONSTRUCTOR_INGREDIENT, UPDATE_CONSTRUCTOR_INGREDIENTS, ADD_MODAL_INGREDIENTS, DELETE_MODAL_INGREDIENTS, REFRESH_ORDERDETAILS_ITEMS, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_FAILED, GET_ORDERDETAILS_REQUEST, GET_ORDERDETAILS_SUCCESS, GET_ORDERDETAILS_FAILED, REFRESH_BUNS_SCROLL, REFRESH_SAUCES_SCROLL, REFRESH_MAINS_SCROLL } from '../action-types';\nexport const addConstructorIngredient = createAction(ADD_CONSTRUCTOR_INGREDIENT);\nexport const deleteConstructorIngredient = createAction(DELETE_CONSTRUCTOR_INGREDIENT);\nexport const updateConstructorIngredients = createAction(UPDATE_CONSTRUCTOR_INGREDIENTS);\nexport const addModalIngredients = createAction(ADD_MODAL_INGREDIENTS);\nexport const deleteModalIngredients = createAction(DELETE_MODAL_INGREDIENTS);\nexport const refreshOrderdetailsItems = createAction(REFRESH_ORDERDETAILS_ITEMS);\nexport const getIngredientsRequest = createAction(GET_INGREDIENTS_REQUEST);\nexport const getIngredientsSuccess = createAction(GET_INGREDIENTS_SUCCESS);\nexport const getIngredientsFailed = createAction(GET_INGREDIENTS_FAILED);\nexport const getOrderdetailsRequest = createAction(GET_ORDERDETAILS_REQUEST);\nexport const getOrderdetailsSuccess = createAction(GET_ORDERDETAILS_SUCCESS);\nexport const getOrderdetailsFailed = createAction(GET_ORDERDETAILS_FAILED);\nexport const refreshBunsScroll = createAction(REFRESH_BUNS_SCROLL);\nexport const refreshSaucesScroll = createAction(REFRESH_SAUCES_SCROLL);\nexport const refreshMainsScroll = createAction(REFRESH_MAINS_SCROLL);\nexport const getIngredients = () => dispatch => {\n  dispatch({\n    type: getIngredientsRequest\n  });\n  fetch(baseURL + 'ingredients').then(checkResponse).then(obj => {\n    //getItemsRequest().then(obj => {\n    if (obj && obj.success) {\n      dispatch({\n        type: getIngredientsSuccess,\n        burgerIngredients: obj.data\n      });\n    } else {\n      dispatch({\n        type: getIngredientsFailed\n      });\n    }\n  }).catch(error => {\n    dispatch({\n      type: getIngredientsFailed\n    });\n  });\n};\nexport const getOrderDetails = function () {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return dispatch => {\n    const idsComponents = {\n      ingredients: body.map(comp => comp._id)\n    };\n    const accessToken = getCookie('accessToken');\n    dispatch({\n      type: getOrderdetailsRequest\n    });\n    fetch(baseURL + 'orders', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(idsComponents)\n    }).then(checkResponse).then(obj => {\n      console.log(obj);\n\n      if (obj) {\n        dispatch({\n          type: getOrderdetailsSuccess,\n          orderDetails: obj.order.number\n        });\n      } else {\n        dispatch({\n          type: getOrderdetailsFailed\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: getOrderdetailsFailed\n      });\n    });\n  };\n};","map":{"version":3,"names":["createAction","baseURL","checkResponse","getCookie","ADD_CONSTRUCTOR_INGREDIENT","DELETE_CONSTRUCTOR_INGREDIENT","UPDATE_CONSTRUCTOR_INGREDIENTS","ADD_MODAL_INGREDIENTS","DELETE_MODAL_INGREDIENTS","REFRESH_ORDERDETAILS_ITEMS","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","GET_ORDERDETAILS_REQUEST","GET_ORDERDETAILS_SUCCESS","GET_ORDERDETAILS_FAILED","REFRESH_BUNS_SCROLL","REFRESH_SAUCES_SCROLL","REFRESH_MAINS_SCROLL","addConstructorIngredient","deleteConstructorIngredient","updateConstructorIngredients","addModalIngredients","deleteModalIngredients","refreshOrderdetailsItems","getIngredientsRequest","getIngredientsSuccess","getIngredientsFailed","getOrderdetailsRequest","getOrderdetailsSuccess","getOrderdetailsFailed","refreshBunsScroll","refreshSaucesScroll","refreshMainsScroll","getIngredients","dispatch","type","fetch","then","obj","success","burgerIngredients","data","catch","error","getOrderDetails","body","idsComponents","ingredients","map","comp","_id","accessToken","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","console","log","orderDetails","order","number"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/actions/ingredients.ts"],"sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport { baseURL }  from '../../utils/config';\nimport { checkResponse }  from '../utils';\n\nimport { setCookie, getCookie, deleteCookie, fetchRequest } from '../utils';\n//import { getItemsRequest, getOrderDetailsRequest } from './fakeApi';\nimport { TIngredient } from '../../types/data';\n\nimport {\n  ADD_CONSTRUCTOR_INGREDIENT,\n  DELETE_CONSTRUCTOR_INGREDIENT,\n  UPDATE_CONSTRUCTOR_INGREDIENTS,\n  \n  ADD_MODAL_INGREDIENTS,\n  DELETE_MODAL_INGREDIENTS,\n  \n \n  REFRESH_ORDERDETAILS_ITEMS,\n\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  \n  GET_ORDERDETAILS_REQUEST,\n  GET_ORDERDETAILS_SUCCESS,\n  GET_ORDERDETAILS_FAILED,\n  \n  REFRESH_BUNS_SCROLL,\n  REFRESH_SAUCES_SCROLL,\n  REFRESH_MAINS_SCROLL,\n\n} from '../action-types';\n\nimport { AppDispatch } from '../store';\n\nexport const addConstructorIngredient = createAction(ADD_CONSTRUCTOR_INGREDIENT);\nexport const deleteConstructorIngredient = createAction(DELETE_CONSTRUCTOR_INGREDIENT);\nexport const updateConstructorIngredients = createAction(UPDATE_CONSTRUCTOR_INGREDIENTS);\n\nexport const addModalIngredients = createAction(ADD_MODAL_INGREDIENTS);\nexport const deleteModalIngredients = createAction(DELETE_MODAL_INGREDIENTS);\n\nexport const refreshOrderdetailsItems = createAction(REFRESH_ORDERDETAILS_ITEMS);\n\nexport const getIngredientsRequest = createAction(GET_INGREDIENTS_REQUEST);\nexport const getIngredientsSuccess = createAction(GET_INGREDIENTS_SUCCESS);\nexport const getIngredientsFailed = createAction(GET_INGREDIENTS_FAILED);\n\nexport const getOrderdetailsRequest = createAction(GET_ORDERDETAILS_REQUEST);\nexport const getOrderdetailsSuccess = createAction(GET_ORDERDETAILS_SUCCESS);\nexport const getOrderdetailsFailed = createAction(GET_ORDERDETAILS_FAILED)\n\nexport const refreshBunsScroll = createAction(REFRESH_BUNS_SCROLL);\nexport const refreshSaucesScroll = createAction(REFRESH_SAUCES_SCROLL);\nexport const refreshMainsScroll = createAction(REFRESH_MAINS_SCROLL);\n\nexport type TIngredientsAction = ReturnType<typeof addConstructorIngredient>\n                                | ReturnType<typeof deleteConstructorIngredient>\n                                | ReturnType<typeof updateConstructorIngredients>\n                                | ReturnType<typeof addModalIngredients>\n                                | ReturnType<typeof deleteModalIngredients>\n                                | ReturnType<typeof refreshOrderdetailsItems>\n                                | ReturnType<typeof getIngredientsRequest>\n                                | ReturnType<typeof getIngredientsSuccess>\n                                | ReturnType<typeof getIngredientsFailed>\n                                | ReturnType<typeof getOrderdetailsRequest>\n                                | ReturnType<typeof getOrderdetailsSuccess>\n                                | ReturnType<typeof getOrderdetailsFailed>\n                                | ReturnType<typeof refreshBunsScroll>\n                                | ReturnType<typeof refreshSaucesScroll>\n                                | ReturnType<typeof refreshMainsScroll>;\n\nexport const getIngredients =  () => (dispatch: AppDispatch) => {\n  dispatch({ type: getIngredientsRequest });\n  fetch(baseURL + 'ingredients').then(checkResponse).then(obj => {\n  //getItemsRequest().then(obj => {\n    if (obj && obj.success) {\n      dispatch({ type: getIngredientsSuccess, burgerIngredients: obj.data });\n\n      } else {\n        dispatch({ type: getIngredientsFailed });\n      }\n    }).catch((error) => {\n      dispatch({ type: getIngredientsFailed });\n    });\n};\n\nexport const getOrderDetails = (body: (null | Array<TIngredient>) = null) => (dispatch: AppDispatch) => {\n  const idsComponents = {ingredients: body.map((comp)=>comp._id)};\n  const accessToken = getCookie('accessToken');\n  dispatch({ type: getOrderdetailsRequest });\n  fetch(baseURL + 'orders', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + accessToken\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(idsComponents),\n  }).then(checkResponse).then(obj => {\n    console.log(obj)\n    if (obj) {\n      dispatch({ type: getOrderdetailsSuccess, orderDetails: obj.order.number});\n    } else {\n      dispatch({ type: getOrderdetailsFailed });\n    }\n  }).catch((error) => {\n    dispatch({ type: getOrderdetailsFailed });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}