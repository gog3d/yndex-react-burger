{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { getForgotPasswordRequest, getForgotPasswordSuccess, getForgotPasswordFailed } from '../actions/forgot-password';\nexport const forgotPasswordState = {\n  forgotPassword: null,\n  forgotPasswordRequest: false,\n  forgotPasswordFailed: false\n};\nexport const forgotPasswordReducer = createReducer(forgotPasswordState, builder => {\n  builder.addCase(getForgotPasswordRequest, (state, action) => {\n    state.forgotPasswordRequest = true;\n  }).addCase(getForgotPasswordSuccess, (state, action) => {\n    state.forgotPasswordFailed = false;\n    state.forgotPassword = action.restorePassword;\n    state.forgotPasswordRequest = false;\n  }).addCase(getForgotPasswordFailed, (state, action) => {\n    state.forgotPasswordFailed = true;\n    state.forgotPasswordRequest = false;\n  });\n});","map":{"version":3,"names":["createReducer","getForgotPasswordRequest","getForgotPasswordSuccess","getForgotPasswordFailed","forgotPasswordState","forgotPassword","forgotPasswordRequest","forgotPasswordFailed","forgotPasswordReducer","builder","addCase","state","action","restorePassword"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/reducers/forgot-password.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  getForgotPasswordRequest,\n  getForgotPasswordSuccess,\n  getForgotPasswordFailed,\n} from '../actions/forgot-password';\n\nimport { TForgotPasswordState,TForgotPasswordType } from '../../types/data';\n\nexport const forgotPasswordState: TForgotPasswordState = {\n  forgotPassword: null as (null | TForgotPasswordType),\n  forgotPasswordRequest: false,\n  forgotPasswordFailed: false,\n  };\n  \nexport const forgotPasswordReducer = createReducer(forgotPasswordState, (builder) => {\n  builder\n  .addCase(getForgotPasswordRequest, (state, action) => {\n    state.forgotPasswordRequest = true;\n  })\n  .addCase(getForgotPasswordSuccess, (state, action) => {\n    state.forgotPasswordFailed = false; \n    state.forgotPassword = action.restorePassword; \n    state.forgotPasswordRequest = false;\n  })\n  .addCase(getForgotPasswordFailed, (state, action) => {\n    state.forgotPasswordFailed = true; \n    state.forgotPasswordRequest = false;\n  })\n});"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,SACEC,wBADF,EAEEC,wBAFF,EAGEC,uBAHF,QAIO,4BAJP;AAQA,OAAO,MAAMC,mBAAyC,GAAG;EACvDC,cAAc,EAAE,IADuC;EAEvDC,qBAAqB,EAAE,KAFgC;EAGvDC,oBAAoB,EAAE;AAHiC,CAAlD;AAMP,OAAO,MAAMC,qBAAqB,GAAGR,aAAa,CAACI,mBAAD,EAAuBK,OAAD,IAAa;EACnFA,OAAO,CACNC,OADD,CACST,wBADT,EACmC,CAACU,KAAD,EAAQC,MAAR,KAAmB;IACpDD,KAAK,CAACL,qBAAN,GAA8B,IAA9B;EACD,CAHD,EAICI,OAJD,CAISR,wBAJT,EAImC,CAACS,KAAD,EAAQC,MAAR,KAAmB;IACpDD,KAAK,CAACJ,oBAAN,GAA6B,KAA7B;IACAI,KAAK,CAACN,cAAN,GAAuBO,MAAM,CAACC,eAA9B;IACAF,KAAK,CAACL,qBAAN,GAA8B,KAA9B;EACD,CARD,EASCI,OATD,CASSP,uBATT,EASkC,CAACQ,KAAD,EAAQC,MAAR,KAAmB;IACnDD,KAAK,CAACJ,oBAAN,GAA6B,IAA7B;IACAI,KAAK,CAACL,qBAAN,GAA8B,KAA9B;EACD,CAZD;AAaD,CAdiD,CAA3C"},"metadata":{},"sourceType":"module"}