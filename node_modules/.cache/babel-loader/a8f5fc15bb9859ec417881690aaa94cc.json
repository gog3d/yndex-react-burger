{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './reducers';\nimport { createWsMiddleware } from './middleware';\nimport { wsConnectionStart, wsConnectionSuccess, wsConnectionError, wsConnectionClosed, wsGetMessage, wsDisconnect } from './actions/wsAction';\nimport { wsUserConnectionStart, wsUserConnectionSuccess, wsUserConnectionError, wsUserConnectionClosed, wsUserGetMessage, wsUserDisconnect } from './actions/wsUserAction';\nconst url = 'wss://norma.nomoreparties.space/orders'; //const url = 'ws://localhost';\n\nconst wsUserActions = {\n  wsStart: wsUserConnectionStart,\n  onOpen: wsUserConnectionSuccess,\n  onError: wsUserConnectionError,\n  onMessage: wsUserGetMessage,\n  onClose: wsUserConnectionClosed,\n  wsDisconnect: wsUserDisconnect\n};\nconst wsActions = {\n  wsStart: wsConnectionStart,\n  onOpen: wsConnectionSuccess,\n  onError: wsConnectionError,\n  onMessage: wsGetMessage,\n  onClose: wsConnectionClosed,\n  wsDisconnect: wsDisconnect\n};\nconst wsUserMiddleware = createWsMiddleware(url, wsUserActions);\nconst wsMiddleware = createWsMiddleware(url, wsActions);\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    }).concat(wsMiddleware, wsUserMiddleware);\n  },\n  devTools: process.env.NODE_ENV !== 'production'\n});","map":{"version":3,"names":["configureStore","rootReducer","createWsMiddleware","wsConnectionStart","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","wsGetMessage","wsDisconnect","wsUserConnectionStart","wsUserConnectionSuccess","wsUserConnectionError","wsUserConnectionClosed","wsUserGetMessage","wsUserDisconnect","url","wsUserActions","wsStart","onOpen","onError","onMessage","onClose","wsActions","wsUserMiddleware","wsMiddleware","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","devTools","process","env","NODE_ENV"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/store.ts"],"sourcesContent":["import { AnyAction } from 'redux'\nimport { configureStore, createSerializableStateInvariantMiddleware  } from '@reduxjs/toolkit';\nimport { rootReducer } from './reducers';\nimport { createWsMiddleware } from './middleware';\nimport { ThunkAction } from 'redux-thunk'\n\nimport {  \n  wsConnectionStart, \n  wsConnectionSuccess, \n  wsConnectionError, \n  wsConnectionClosed, \n  wsGetMessage,\n  wsDisconnect,\n} from './actions/wsAction';\n\nimport {  \n  wsUserConnectionStart, \n  wsUserConnectionSuccess, \n  wsUserConnectionError, \n  wsUserConnectionClosed, \n  wsUserGetMessage,\n  wsUserDisconnect,\n} from './actions/wsUserAction';\n\nconst url = 'wss://norma.nomoreparties.space/orders';\n//const url = 'ws://localhost';\n\nconst wsUserActions = {\n  wsStart: wsUserConnectionStart,\n  onOpen: wsUserConnectionSuccess,\n  onError: wsUserConnectionError,\n  onMessage: wsUserGetMessage,\n  onClose: wsUserConnectionClosed,\n  wsDisconnect: wsUserDisconnect,\n}\nconst wsActions = {\n  wsStart: wsConnectionStart,\n  onOpen: wsConnectionSuccess,\n  onError: wsConnectionError,\n  onMessage: wsGetMessage,\n  onClose: wsConnectionClosed,\n  wsDisconnect: wsDisconnect,\n}\n\nconst wsUserMiddleware = createWsMiddleware(url, wsUserActions);\nconst wsMiddleware = createWsMiddleware(url, wsActions);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => {    \n    return getDefaultMiddleware({\n      serializableCheck: false,\n    }).concat(\n      wsMiddleware, \n      wsUserMiddleware, \n      );\n  },\n  devTools: process.env.NODE_ENV !=='production',\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  AnyAction\n>"],"mappings":"AACA,SAASA,cAAT,QAA4E,kBAA5E;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAGA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,YALF,EAMEC,YANF,QAOO,oBAPP;AASA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,qBAHF,EAIEC,sBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,wBAPP;AASA,MAAMC,GAAG,GAAG,wCAAZ,C,CACA;;AAEA,MAAMC,aAAa,GAAG;EACpBC,OAAO,EAAER,qBADW;EAEpBS,MAAM,EAAER,uBAFY;EAGpBS,OAAO,EAAER,qBAHW;EAIpBS,SAAS,EAAEP,gBAJS;EAKpBQ,OAAO,EAAET,sBALW;EAMpBJ,YAAY,EAAEM;AANM,CAAtB;AAQA,MAAMQ,SAAS,GAAG;EAChBL,OAAO,EAAEd,iBADO;EAEhBe,MAAM,EAAEd,mBAFQ;EAGhBe,OAAO,EAAEd,iBAHO;EAIhBe,SAAS,EAAEb,YAJK;EAKhBc,OAAO,EAAEf,kBALO;EAMhBE,YAAY,EAAEA;AANE,CAAlB;AASA,MAAMe,gBAAgB,GAAGrB,kBAAkB,CAACa,GAAD,EAAMC,aAAN,CAA3C;AACA,MAAMQ,YAAY,GAAGtB,kBAAkB,CAACa,GAAD,EAAMO,SAAN,CAAvC;AAEA,OAAO,MAAMG,KAAK,GAAGzB,cAAc,CAAC;EAClC0B,OAAO,EAAEzB,WADyB;EAElC0B,UAAU,EAAGC,oBAAD,IAA0B;IACpC,OAAOA,oBAAoB,CAAC;MAC1BC,iBAAiB,EAAE;IADO,CAAD,CAApB,CAEJC,MAFI,CAGLN,YAHK,EAILD,gBAJK,CAAP;EAMD,CATiC;EAUlCQ,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB;AAVA,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}