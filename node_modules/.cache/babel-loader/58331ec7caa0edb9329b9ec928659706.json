{"ast":null,"code":"import { createAction } from \"@reduxjs/toolkit\"; //import { baseURL }  from '../../utils/config';\n\nimport { checkResponse } from '../utils';\nimport { setCookie, getCookie, deleteCookie, fetchRequest } from '../utils';\nimport { getLoginRequestApi, getLogoutRequestApi, getTokenRequestApi, getRegisterRequestApi, getUserRequestApi, getRefreshUserRequestApi } from '../fakeApiAuth.js';\nimport { GET_LOGIN_REQUEST, GET_LOGIN_SUCCESS, GET_LOGIN_FAILED, GET_REGISTER_REQUEST, GET_REGISTER_SUCCESS, GET_REGISTER_FAILED, GET_LOGOUT_REQUEST, GET_LOGOUT_SUCCESS, GET_LOGOUT_FAILED, GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILED, GET_REFRESH_USER_REQUEST, GET_REFRESH_USER_SUCCESS, GET_REFRESH_USER_FAILED, GET_AUTH_REQUEST, GET_AUTH_SUCCESS, GET_AUTH_FAILED, GET_TOKEN_REQUEST, GET_TOKEN_SUCCESS, GET_TOKEN_FAILED } from '../action-types';\nexport const getLoginRequest = createAction(GET_LOGIN_REQUEST);\nexport const getLoginSuccess = createAction(GET_LOGIN_SUCCESS);\nexport const getLoginFailed = createAction(GET_LOGIN_FAILED);\nexport const getRegisterRequest = createAction(GET_REGISTER_REQUEST);\nexport const getRegisterSuccess = createAction(GET_REGISTER_SUCCESS);\nexport const getRegisterFailed = createAction(GET_REGISTER_FAILED);\nexport const getLogoutRequest = createAction(GET_LOGOUT_REQUEST);\nexport const getLogoutSuccess = createAction(GET_LOGOUT_SUCCESS);\nexport const getLogoutFailed = createAction(GET_LOGOUT_FAILED);\nexport const getUserRequest = createAction(GET_USER_REQUEST);\nexport const getUserSuccess = createAction(GET_USER_SUCCESS);\nexport const getUserFailed = createAction(GET_USER_FAILED);\nexport const getRefreshUserRequest = createAction(GET_REFRESH_USER_REQUEST);\nexport const getRefreshUserSuccess = createAction(GET_REFRESH_USER_SUCCESS);\nexport const getRefreshUserFailed = createAction(GET_REFRESH_USER_FAILED);\nexport const getAuthRequest = createAction(GET_AUTH_REQUEST);\nexport const getAuthSuccess = createAction(GET_AUTH_SUCCESS);\nexport const getAuthFailed = createAction(GET_AUTH_FAILED);\nexport const getTokenRequest = createAction(GET_TOKEN_REQUEST);\nexport const getTokenSuccess = createAction(GET_TOKEN_SUCCESS);\nexport const getTokenFailed = createAction(GET_TOKEN_FAILED);\nexport const getLogin = function () {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return async dispatch => {\n    dispatch({\n      type: getLoginRequest\n    });\n\n    try {\n      // const res = await fetchRequest.post('auth/login', body);\n      //  const obj = await checkResponse(res);\n      const obj = await getLoginRequestApi({});\n\n      if (obj) {\n        dispatch({\n          type: getLoginSuccess,\n          login: obj\n        });\n        dispatch({\n          type: getUserSuccess,\n          user: obj\n        });\n        dispatch({\n          type: getAuthSuccess,\n          auth: obj\n        });\n        const accessToken = obj.accessToken.split('Bearer ')[1];\n        const refreshToken = obj.refreshToken;\n\n        if (refreshToken) {\n          setCookie('refreshToken', refreshToken);\n        }\n\n        if (accessToken) {\n          setCookie('accessToken', accessToken);\n        }\n      } else {\n        dispatch({\n          type: getLoginFailed\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: getLoginFailed\n      });\n    }\n\n    ;\n  };\n};\nexport const getAuth = () => async dispatch => {\n  dispatch({\n    type: getAuthRequest\n  });\n  const refreshToken = getCookie('refreshToken');\n\n  if (refreshToken) {\n    try {\n      //const res = await fetchRequest.post('auth/token', { 'token' : refreshToken });\n      //const obj = await checkResponse(res);\n      const obj = await getLoginRequestApi(body);\n\n      if (obj) {\n        dispatch({\n          type: getAuthSuccess,\n          auth: obj\n        });\n        const accessToken = obj.accessToken.split('Bearer ')[1];\n        const refreshToken = obj.refreshToken;\n\n        if (refreshToken) {\n          setCookie('refreshToken', refreshToken);\n        }\n\n        if (accessToken) {\n          setCookie('accessToken', accessToken);\n        }\n      } else {\n        dispatch({\n          type: getAuthFailed\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: getAuthFailed\n      });\n    }\n  } else {\n    dispatch({\n      type: getAuthFailed\n    });\n  }\n};\nexport const getUser = () => async dispatch => {\n  dispatch({\n    type: getUserRequest\n  });\n  await getAuth();\n  const accessToken = getCookie('accessToken');\n\n  if (accessToken) {\n    try {\n      //const res = await fetchRequest.get('auth/user', { 'Authorization': 'Token '+ accessToken });\n      //const obj = await checkResponse(res);\n      const obj = await getLoginRequestApi({});\n\n      if (obj) {\n        dispatch({\n          type: getUserSuccess,\n          user: obj\n        });\n      } else {\n        dispatch({\n          type: getUserFailed\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: getUserFailed\n      });\n    }\n  } else {\n    dispatch({\n      type: getUserFailed\n    });\n  }\n};\nexport const getRegister = function () {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return async dispatch => {\n    dispatch({\n      type: getRegisterRequest\n    });\n\n    try {\n      const res = await fetchRequest.post('auth/register', body);\n      const obj = await checkResponse(res);\n\n      if (obj) {\n        dispatch({\n          type: getRegisterSuccess,\n          register: obj\n        });\n        const accessToken = obj.accessToken.split('Bearer ')[1];\n        const refreshToken = obj.refreshToken;\n\n        if (refreshToken) {\n          setCookie('refreshToken', refreshToken);\n        }\n\n        if (accessToken) {\n          setCookie('accessToken', accessToken);\n        }\n      } else {\n        dispatch({\n          type: getRegisterFailed\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: getRegisterFailed\n      });\n    }\n\n    ;\n  };\n};\nexport const getLogout = () => async dispatch => {\n  dispatch({\n    type: getLogoutRequest\n  });\n  const refreshToken = getCookie('refreshToken');\n\n  if (refreshToken) {\n    try {\n      //const res = await fetchRequest.post('auth/logout', { 'token' : refreshToken });\n      //const obj = await checkResponse(res);\n      const obj = await getLogoutRequestApi();\n\n      if (obj) {\n        dispatch({\n          type: getLogoutSuccess,\n          logout: obj\n        });\n        dispatch({\n          type: getUserSuccess,\n          user: {}\n        });\n        dispatch({\n          type: getUserFailed\n        });\n        dispatch({\n          type: getAuthSuccess,\n          auth: {}\n        });\n        dispatch({\n          type: getAuthFailed\n        });\n        const accessToken = getCookie('accessToken');\n        const refreshToken = getCookie('refreshToken');\n\n        if (refreshToken) {\n          deleteCookie('refreshToken');\n        }\n\n        if (accessToken) {\n          deleteCookie('accessToken');\n        }\n      } else {\n        dispatch({\n          type: getLogoutFailed\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: getLogoutFailed\n      });\n    }\n\n    ;\n  } else {\n    dispatch({\n      type: getLogoutFailed\n    });\n  }\n};\nexport const getRefreshUser = function () {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return async dispatch => {\n    dispatch({\n      type: getRefreshUserRequest\n    });\n    const accessToken = getCookie('accessToken');\n\n    if (accessToken) {\n      try {\n        const res = await fetchRequest.patch('auth/user', body, {\n          'Authorization': 'Token ' + accessToken\n        });\n        const obj = await checkResponse(res);\n\n        if (obj) {\n          dispatch({\n            type: getRefreshUserSuccess,\n            refreshUser: obj\n          });\n          dispatch({\n            type: getUserSuccess,\n            user: obj\n          });\n        } else {\n          dispatch({\n            type: getRefreshUserFailed\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        dispatch({\n          type: getRefreshUserFailed\n        });\n      }\n    } else {\n      dispatch({\n        type: getRefreshUserFailed\n      });\n    }\n  };\n};","map":{"version":3,"names":["createAction","checkResponse","setCookie","getCookie","deleteCookie","fetchRequest","getLoginRequestApi","getLogoutRequestApi","getTokenRequestApi","getRegisterRequestApi","getUserRequestApi","getRefreshUserRequestApi","GET_LOGIN_REQUEST","GET_LOGIN_SUCCESS","GET_LOGIN_FAILED","GET_REGISTER_REQUEST","GET_REGISTER_SUCCESS","GET_REGISTER_FAILED","GET_LOGOUT_REQUEST","GET_LOGOUT_SUCCESS","GET_LOGOUT_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","GET_REFRESH_USER_REQUEST","GET_REFRESH_USER_SUCCESS","GET_REFRESH_USER_FAILED","GET_AUTH_REQUEST","GET_AUTH_SUCCESS","GET_AUTH_FAILED","GET_TOKEN_REQUEST","GET_TOKEN_SUCCESS","GET_TOKEN_FAILED","getLoginRequest","getLoginSuccess","getLoginFailed","getRegisterRequest","getRegisterSuccess","getRegisterFailed","getLogoutRequest","getLogoutSuccess","getLogoutFailed","getUserRequest","getUserSuccess","getUserFailed","getRefreshUserRequest","getRefreshUserSuccess","getRefreshUserFailed","getAuthRequest","getAuthSuccess","getAuthFailed","getTokenRequest","getTokenSuccess","getTokenFailed","getLogin","body","dispatch","type","obj","login","user","auth","accessToken","split","refreshToken","error","console","log","getAuth","getUser","getRegister","res","post","register","getLogout","logout","getRefreshUser","patch","refreshUser"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/actions/auth.js"],"sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n//import { baseURL }  from '../../utils/config';\nimport { checkResponse }  from '../utils';\nimport { setCookie, getCookie, deleteCookie, fetchRequest } from '../utils';\n\nimport { \n  getLoginRequestApi,  \n  getLogoutRequestApi, \n  getTokenRequestApi, \n  getRegisterRequestApi, \n  getUserRequestApi, \n  getRefreshUserRequestApi\n  } from '../fakeApiAuth.js';\n\n\nimport {\n  GET_LOGIN_REQUEST,\n  GET_LOGIN_SUCCESS,\n  GET_LOGIN_FAILED,\n  \n  GET_REGISTER_REQUEST,\n  GET_REGISTER_SUCCESS,\n  GET_REGISTER_FAILED,\n  \n  GET_LOGOUT_REQUEST,\n  GET_LOGOUT_SUCCESS,\n  GET_LOGOUT_FAILED,\n   \n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  \n  GET_REFRESH_USER_REQUEST,\n  GET_REFRESH_USER_SUCCESS,\n  GET_REFRESH_USER_FAILED,\n  \n  GET_AUTH_REQUEST,\n  GET_AUTH_SUCCESS,\n  GET_AUTH_FAILED,\n\n  GET_TOKEN_REQUEST,\n  GET_TOKEN_SUCCESS,\n  GET_TOKEN_FAILED,\n\n} from '../action-types';\nexport const getLoginRequest = createAction(GET_LOGIN_REQUEST);\nexport const getLoginSuccess = createAction(GET_LOGIN_SUCCESS);\nexport const getLoginFailed = createAction(GET_LOGIN_FAILED);\n\nexport const getRegisterRequest = createAction(GET_REGISTER_REQUEST);\nexport const getRegisterSuccess = createAction(GET_REGISTER_SUCCESS);\nexport const getRegisterFailed = createAction(GET_REGISTER_FAILED);\n\nexport const getLogoutRequest = createAction(GET_LOGOUT_REQUEST);\nexport const getLogoutSuccess = createAction(GET_LOGOUT_SUCCESS);\nexport const getLogoutFailed = createAction(GET_LOGOUT_FAILED);\n \nexport const getUserRequest = createAction(GET_USER_REQUEST);\nexport const getUserSuccess = createAction(GET_USER_SUCCESS);\nexport const getUserFailed = createAction(GET_USER_FAILED);\n\nexport const getRefreshUserRequest = createAction(GET_REFRESH_USER_REQUEST);\nexport const getRefreshUserSuccess = createAction(GET_REFRESH_USER_SUCCESS);\nexport const getRefreshUserFailed = createAction(GET_REFRESH_USER_FAILED);\n\nexport const getAuthRequest = createAction(GET_AUTH_REQUEST);\nexport const getAuthSuccess = createAction(GET_AUTH_SUCCESS);\nexport const getAuthFailed = createAction(GET_AUTH_FAILED);\n\nexport const getTokenRequest = createAction(GET_TOKEN_REQUEST);\nexport const getTokenSuccess = createAction(GET_TOKEN_SUCCESS);\nexport const getTokenFailed = createAction(GET_TOKEN_FAILED);\n\nexport const getLogin = (body = null) => async (dispatch) => {\n  dispatch({ type: getLoginRequest });\n  try {\n   // const res = await fetchRequest.post('auth/login', body);\n  //  const obj = await checkResponse(res);\n    const obj = await getLoginRequestApi({});\n      if (obj) {\n        dispatch({ type: getLoginSuccess, login: obj});\n        dispatch({ type: getUserSuccess, user: obj});\n        dispatch({ type: getAuthSuccess, auth: obj});\n        const  accessToken = obj.accessToken.split('Bearer ')[1];\n        const  refreshToken = obj.refreshToken;\n        if (refreshToken) {\n          setCookie('refreshToken', refreshToken);\n        }\n        if (accessToken) {\n          setCookie('accessToken', accessToken);\n        }\n      } else {\n        dispatch({ type: getLoginFailed });\n      }\n  } catch(error) {\n    console.log(error);\n    dispatch({ type: getLoginFailed });\n  };\n};\n\nexport const getAuth = () => async (dispatch) => {\n  dispatch({ type: getAuthRequest });\n  const refreshToken = getCookie('refreshToken');\n  if (refreshToken) {\n    try {\n      //const res = await fetchRequest.post('auth/token', { 'token' : refreshToken });\n      //const obj = await checkResponse(res);\n      const obj = await getLoginRequestApi(body);\n        if (obj) {\n          dispatch({ type: getAuthSuccess, auth: obj});\n          const  accessToken = obj.accessToken.split('Bearer ')[1];\n          const  refreshToken = obj.refreshToken;\n          if (refreshToken) {\n            setCookie('refreshToken', refreshToken);\n          }\n          if (accessToken) {\n            setCookie('accessToken', accessToken);\n          }\n        } else {\n          dispatch({ type: getAuthFailed });\n        }\n    } catch(error) {\n      console.log(error);\n      dispatch({ type: getAuthFailed });\n    }\n  } else {\n    dispatch({ type: getAuthFailed });\n  }\n};\n\nexport const getUser =  () => async (dispatch) => {\n  dispatch({ type: getUserRequest });\n  await getAuth();\n  const accessToken = getCookie('accessToken');\n  if(accessToken) {\n    try {\n      //const res = await fetchRequest.get('auth/user', { 'Authorization': 'Token '+ accessToken });\n      //const obj = await checkResponse(res);\n      const obj = await getLoginRequestApi({});\n      if (obj) {\n        dispatch({ type: getUserSuccess, user: obj});\n      } else {\n        dispatch({ type: getUserFailed });\n      }\n    } catch(error){\n        console.log(error)\n        dispatch({ type: getUserFailed });\n    }\n  } else {\n    dispatch({ type: getUserFailed });\n  }\n};\n\nexport const getRegister = (body = null) => async (dispatch) => {\n  dispatch({ type: getRegisterRequest });\n  try {\n    const res = await fetchRequest.post('auth/register', body);\n    const obj = await checkResponse(res);\n      if (obj) {\n        dispatch({ type: getRegisterSuccess, register: obj});\n        const  accessToken = obj.accessToken.split('Bearer ')[1];\n        const  refreshToken = obj.refreshToken;\n        if (refreshToken) {\n          setCookie('refreshToken', refreshToken);\n        }\n        if (accessToken) {\n          setCookie('accessToken', accessToken);\n        }\n      } else {\n        dispatch({ type: getRegisterFailed });\n      }\n  } catch(error) {\n    console.log(error);\n    dispatch({ type: getRegisterFailed });\n  };\n};\n\nexport const getLogout = () => async (dispatch) => {\n  dispatch({ type: getLogoutRequest });\n  const refreshToken = getCookie('refreshToken');\n  if (refreshToken) {\n    try {\n    //const res = await fetchRequest.post('auth/logout', { 'token' : refreshToken });\n    //const obj = await checkResponse(res);\n    const obj = await getLogoutRequestApi();\n      if (obj) {\n        dispatch({ type: getLogoutSuccess, logout: obj});\n        dispatch({ type: getUserSuccess, user: {}});\n        dispatch({ type: getUserFailed });\n        dispatch({ type: getAuthSuccess, auth: {}});\n        dispatch({ type: getAuthFailed });\n        const  accessToken = getCookie('accessToken');\n        const  refreshToken = getCookie('refreshToken');\n        if (refreshToken) {\n          deleteCookie('refreshToken');\n        }\n        if (accessToken) {\n          deleteCookie('accessToken');\n        }\n      } else {\n        dispatch({ type: getLogoutFailed });\n      }\n  } catch(error) {\n    console.log(error);\n    dispatch({ type: getLogoutFailed });\n  };\n  } else {\n    dispatch({ type: getLogoutFailed });\n  \n  }\n};\n\nexport const getRefreshUser = (body = null) => async (dispatch) => {\n  dispatch({ type: getRefreshUserRequest });\n  const accessToken = getCookie('accessToken');\n  if(accessToken) {\n    try {\n      const res = await fetchRequest.patch('auth/user', body, \n        { 'Authorization': 'Token '+ accessToken });\n      const obj = await checkResponse(res);\n      if (obj) {\n        dispatch({ type: getRefreshUserSuccess, refreshUser: obj});\n        dispatch({ type: getUserSuccess, user: obj});\n      } else {\n        dispatch({ type: getRefreshUserFailed });\n      }\n    } catch(error){\n        console.log(error)\n        dispatch({ type: getRefreshUserFailed });\n    }\n  } else {\n    dispatch({ type: getRefreshUserFailed });\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}