{"ast":null,"code":"import { useDispatch, useSelector } from 'react-redux';\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = useDispatch;\nexport const useAppSelector = useSelector;\n/*\n/*\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n*/","map":{"version":3,"names":["useDispatch","useSelector","useAppDispatch","useAppSelector"],"sources":["/home/gog3d/JS/6-yndex-react/0-project/react-burger/src/redux/hooks.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n/*\n/*\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n*/"],"mappings":"AAAA,SAA+BA,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAGA;AACA,OAAO,MAAMC,cAAiC,GAAGF,WAA1C;AACP,OAAO,MAAMG,cAA+C,GAAGF,WAAxD;AAEP;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}